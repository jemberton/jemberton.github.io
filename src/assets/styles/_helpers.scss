// TODO Add method to handle text colors as links. It should handle hover colors 

//@=============================================================================
//@ Globals
//@=============================================================================

$global-font-size: 11pt;
$global-font-family: 'Fira Code', monospace;
$global-font-family-retina: 'Fira Sans', sans-serif;

//@=============================================================================
//@ Variable Arrays
//@=============================================================================

//# SIZE_NAME LAYOUT_SIZE TEXT_SIZE
$sizes: 
    "xxs" "0.25" "0.5",
    "xs" "0.5" "0.7",
    "sm" "0.75" "0.9",
    "md" "1.0" "1.0",
    "lg" "1.25" "1.25",
    "xl" "1.5" "1.5",
    "xxl" "2.0" "2.0";

$shadows:
    "lowest" "0 1px 1px 1px rgba(0,0,0,0.2)",
    "lower" "0 1px 2px 1px rgba(0,0,0,0.2)",
    "low" "0 1px 4px 1px rgba(0,0,0,0.2)",
    "high" "0 1px 6px 2px rgba(0,0,0,0.3)",
    "higher" "0 2px 6px 3px rgba(0,0,0,0.3)",
    "highest" "0 3px 8px 4px rgba(0,0,0,0.3)";

$filters:
    "grayscale" "grayscale(60%)",
    "bw" "grayscale(100%)";

$borders:
    "none" "0px",
    "thinner" "1px",
    "thin" "2px",
    "thick" "3px",
    "thicker" "4px";

$letter-spacings:
    "narrow" "-1",
    "wide" "1";

$headings:
    "h1" "1.75",
    "h2" "1.5",
    "h3" "1.25",
    "h4" "1.1",
    "h5" "1.0",
    "h6" "0.9";

$alignments:
    "start",
    "end",
    "center";

$faces:
    "t" "top",
    "b" "bottom",
    "r" "right",
    "l" "left";

$svg:
    "xxs" "0.8",
    "xs" "1.0",
    "sm" "1.5",
    "md" "2.0",
    "lg" "2.5",
    "xl" "3.0",
    "xxl" "4.0";

//@=============================================================================
//@ Iterative Classes
//@=============================================================================

@each $border_name, $border in $borders {
    .border-#{$border_name} { border: #{$border} solid transparent; }

    @each $face_letter, $face in $faces {
        .border-#{$face_letter}-#{$border_name} { border-#{$face}: #{$border} solid transparent; }
    }
}
.border { border: 2px solid transparent; }
.border-dotted { border-style: dotted; }
.border-double { border-style: double; }
.border-dashed { border-style: dashed; }

//# Build colors from Catppuccin Mocha
//# bg text
@each $color_name, $color_hex, $hover in $mocha {
    .bg-#{$color_name} { background: $color_hex; }
    .border-#{$color_name} { border-color: $color_hex; }
    .text-#{$color_name} { color: $color_hex; }
    a {
        &.text-#{$color_name} { 
            color: $color_hex;
            border-color: $color_hex;

            &:hover { color: $hover; border-color: $hover; }
        }
    }
    .hover-#{$color_name} { &:hover { color: $color_hex; } }

    @each $face_letter, $face in $faces {
        .border-#{$face_letter}-#{$color_name} { border-#{$face}-color: $color_hex; }
    }
}

//# Build size based classes
//# text p rounded
@each $size_name, $size, $text_size in $sizes {
    .text-#{$size_name} { font-size: #{$text_size}em; }
    .p-#{$size_name} { padding: #{$size}em; }
    .m-#{$size_name} { margin: #{$size}em; }
    .rounded-#{$size_name} { border-radius: #{$size}em; }
    .gap-#{$size_name} { gap: #{$size}em; }
    .icon-#{$size_name} { width: #{$size}em; height: #{$size}em; }

    @each $face_letter, $face in $faces {
        .p#{$face_letter}-#{$size_name} { padding-#{$face}: #{$size}em; }
        .m#{$face_letter}-#{$size_name} { margin-#{$face}: #{$size}em; }

        .#{$face_letter}-#{$size_name} { #{$face}: #{$size}em; }
    }

    .px-#{$size_name} { padding-left: #{$size}em; padding-right: #{$size}em; }
    .py-#{$size_name} { padding-top: #{$size}em; padding-bottom: #{$size}em; }
    .mx-#{$size_name} { margin-left: #{$size}em; margin-right: #{$size}em; }
    .my-#{$size_name} { margin-top: #{$size}em; margin-bottom: #{$size}em; }
}
.rounded { border-radius: 1.0em; }
.rounded-full { border-radius: 50%; }
.p-font { padding: $global-font-size; }
.m-font { margin: $global-font-size; }
.icon-font { width: $global-font-size; height: $global-font-size; }
.icon-font2x { width: calc($global-font-size * 2); height: calc($global-font-size * 2); }
.icon-font3x { width: calc($global-font-size * 3); height: calc($global-font-size * 3); }

@each $face_letter, $face in $faces {
    .p#{$face_letter}-none { padding-#{$face}: 0; }
    .m#{$face_letter}-none { margin-#{$face}: 0; }
    .#{$face_letter}-0 { #{$face}: 0; }
}

@each $shadow_name, $shadow in $shadows {
    .shadow-#{$shadow_name} { box-shadow: #{$shadow}; }
}
.shadow { box-shadow: 0 1px 4px 2px rgba(0,0,0,0.2); }

@each $filter_name, $filter in $filters {
    .filter-#{$filter_name} { filter: #{$filter}; }
}

@each $letter_name, $spacing in $letter-spacings {
    .letter-#{$letter_name} { letter-spacing: #{$spacing}px; }
}

@each $heading, $size in $headings {
    #{$heading} { font-size: #{$size}em; }
}

@each $alignment in $alignments {
    .justify-#{$alignment} { justify-content: #{$alignment}; }
    .align-#{$alignment} { align-items: #{$alignment}; }
}

@for $percent from 1 through 10 {
    .w-#{$percent * 10} { width: #{$percent * 10}#{"%"}; }
    .h-#{$percent * 10} { height: #{$percent * 10}#{"%"}; }
}

@for $level from 0 through 10 {
    .z-#{$level} { z-index: #{$level}; }
}

@each $svg_name, $svg_size in $svg {
    .svg-#{$svg_name} { width: #{$svg_size}em; height: #{$svg_size}em; }
}

//@=============================================================================
//@ Static Classes
//@=============================================================================

.pointer { &:hover { cursor: pointer; } }

.gutters-v { margin: 1em 0; }
.gutters-h { margin: 0 1em; }
.gutters { margin: 1em; }

.overflow-none { overflow: hidden; }
.overflow-x-none { overflow-x: none; }
.overflow-y-none { overflow-y: none; }

.flex { display: flex; }
.flex-inline { display: inline-flex; }

.absolute { position: absolute; }
.fixed { position: fixed; }

.grow { flex-grow: 1; }
.shrink { flex-grow: 0; }

.row { flex-direction: row; }
.column { flex-direction: column; }

.font-mono { font-family: $global-font-family; }
.font-retina { font-family: $global-font-family-retina; }

.font-bold { font-weight: bold; }

.circle { clip-path: circle(40%); }

.capitalize { text-transform: capitalize; }
.uppercase { text-transform: uppercase; }
.lowercase { text-transform: lowercase; }

.underline { border: 0px; border-bottom-width: 1px; border-style: solid; }

.justify-text { text-align: justify; text-justify: inter-word; }

//@=============================================================================
//@ TO BE SORTED AND/OR AUTOMATED
//@=============================================================================

.zig-zag-b {
    --mask: conic-gradient(from -45deg at bottom,#0000,#000 1deg 89deg,#0000 90deg) 50%/1em 100%;
    -webkit-mask: var(--mask);
    mask: var(--mask);
}

.zig-zag-t {
    --mask: conic-gradient(from 135deg at top,#0000,#000 1deg 89deg,#0000 90deg) 50%/1em 100%;
    -webkit-mask: var(--mask);
    mask: var(--mask);
}

.zig-zag-y {
    --mask: 
        conic-gradient(from 135deg at top,#0000,#000 1deg 89deg,#0000 90deg) top/1em 51% repeat-x,
        conic-gradient(from -45deg at bottom,#0000,#000 1deg 89deg,#0000 90deg) bottom/1em 51% repeat-x;
    -webkit-mask: var(--mask);
    mask: var(--mask);

    &::before {
        content: "";
        display: flex; position: absolute;
        background: $crust;
        width: 100%; height: 100%;
        z-index: -1;
        mask:
            conic-gradient(from 135deg at top,#0000,#000 1deg 89deg,#0000 90deg) top/1em 51% repeat-x,
            conic-gradient(from -45deg at bottom,#0000,#000 1deg 89deg,#0000 90deg) bottom/1em 51% repeat-x;
    }

    &::after {
        content: "";
        display: flex; position: absolute;
        background: $surface0;
        top: 1px; left: 1px;
        width: calc(100% - 2px); height: calc(100% - 2px);
        z-index: -1;
        mask:
            conic-gradient(from 135deg at top,#0000,#000 1deg 89deg,#0000 90deg) top/1em 51% repeat-x,
            conic-gradient(from -45deg at bottom,#0000,#000 1deg 89deg,#0000 90deg) bottom/1em 51% repeat-x;
    }
}

.zig-zag-l {
    --mask: conic-gradient(from 45deg at left,#0000,#000 1deg 89deg,#0000 90deg) 50%/100% 1em;
    -webkit-mask: var(--mask);
    mask: var(--mask);
}

.zig-zag-r {
    --mask: conic-gradient(from -135deg at right,#0000,#000 1deg 89deg,#0000 90deg) 50%/100% 1em;
    -webkit-mask: var(--mask);
    mask: var(--mask);
}

.zig-zag-x {
    --mask: 
        conic-gradient(from 45deg at left,#0000,#000 1deg 89deg,#0000 90deg) left/51% 1em repeat-y,
        conic-gradient(from -135deg at right,#0000,#000 1deg 89deg,#0000 90deg) right/51% 1em repeat-y;
    -webkit-mask: var(--mask);
    mask: var(--mask);
}

.zig-zag {
    --mask: 
        linear-gradient(#000 0 0) center/calc(100% - 1em) calc(100% - 1em) no-repeat,
        conic-gradient(from  135deg at top   ,#0000,#000 1deg 89deg,#0000 90deg) 0 0   /1em 0.5em space no-repeat,
        conic-gradient(from  -45deg at bottom,#0000,#000 1deg 89deg,#0000 90deg) 0 100%/1em 0.5em space no-repeat,
        conic-gradient(from   45deg at left  ,#0000,#000 1deg 89deg,#0000 90deg) 0 0   /0.5em 1em no-repeat space,
        conic-gradient(from -135deg at right ,#0000,#000 1deg 89deg,#0000 90deg) 100% 0/0.5em 1em no-repeat space;
    -webkit-mask: var(--mask);
    mask: var(--mask);
}

//@=============================================================================
//@ PATTERNS
//@=============================================================================

.graph-paper {
    --s: 100px;
    --c2: #{$base};
    --c1: #{$mantle};
    
    --_g: #0000 90deg,var(--c1) 0;
    background: 
      conic-gradient(from 90deg at 2px 2px,var(--_g)),
      conic-gradient(from 90deg at 1px 1px,var(--_g)),
      var(--c2);
    background-size: var(--s) var(--s), calc(var(--s)/5) calc(var(--s)/5);
}

.paper-torn {
    --b: #{$base};
    border: 1px solid $crust;
    border-bottom: 3px solid $crust;

    background: var(--b);

    &:before, &:after {
        content: ""; height: 2px;
        position: absolute;
        left: 0;
        right: 0;
        clip-path: polygon(0% 0%, 5%  100%, 10% 0%, 15%  100%, 20% 0%, 25% 100%, 30% 0%, 35%  100%, 40% 0%, 45%  100%, 50% 0%, 55%  100%, 60% 0%, 65%  100%, 70% 0%, 75%  100%, 80% 0%, 85%  100%, 90% 0%, 95%  100%, 100% 0%);
        -webkit-clip-path: polygon(0% 0%, 5%  100%, 10% 0%, 15%  100%, 20% 0%, 25% 100%, 30% 0%, 35%  100%, 40% 0%, 45%  100%, 50% 0%, 55%  100%, 60% 0%, 65%  100%, 70% 0%, 75%  100%, 80% 0%, 85%  100%, 90% 0%, 95%  100%, 100% 0%);
    }
      &:before {
        background-color: var(--b);
        top: 0;
      }
      &:after {
        background-color: var(--b);
        bottom: -2px;
      }
}